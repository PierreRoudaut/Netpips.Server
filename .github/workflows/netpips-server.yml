name: Netpips.Server
on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      # - name: test curl
      #   run : |
      #      curl -kv -L -H "Accept: text/html" -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.61 Safari/537.36" "https://www.magnetdl.com/t/the-bad-batch-s01e09/"
      #      false
      - name: install Python 3.9 & cfscrape
        run: |
          sudo apt update
          sudo apt install software-properties-common
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt install python3.9
          python3.9 --version
          pip install -U cfscrape
          false
          
      - name: create netpips filesystem
        run: |
          sudo adduser --disabled-password --gecos "" netpips
          echo "netpips:netpips" | sudo chpasswd

      - name: checkout code
        uses: actions/checkout@v2

      - name: install .NET 2.1
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '2.1.x'
      - name: Install aria2c
        run: |
          sudo apt-get install -y aria2
          aria2c --version

      - name: install mediainfo
        run: |
          sudo apt-get install -y mediainfo
          mediainfo --version

      - name: install transmisstion-remote
        run: |
          sudo apt-get install -y transmission-cli
          sudo apt-get install -y transmission-daemon
          sudo apt-get install -y transmission-common
          transmission-remote --version

      - name: install & configure filebot
        run: |
          sudo apt-get install -y openjdk-8-jre
          sudo apt-get install -y openjdk-8-jdk
          sudo apt-get install -y libjna-java
          wget -O filebot.deb 'https://app.filebot.net/download.php?type=deb&arch=amd64'
          sudo dpkg -i filebot.deb
          rm filebot.deb
          filebot -version
          echo -e "${{ secrets.OPENSUB_USERNAME }}\n${{ secrets.OPENSUB_PASSWORD }}" | filebot -script fn:configure
          echo "${{ secrets.FILEBOT_LICENSE_PSM }}" > filebot-license.psm
          filebot --license filebot-license.psm
          rm filebot-license.psm

      - name: run unit tests
        env: 
          NETPIPS_TEST_SETTINGS_JSON: ${{ secrets.NETPIPS_TEST_SETTINGS_JSON }}
        run: |
          dotnet build
          dotnet test # --filter 'TestCategory=Failing'  # --logger html -r .

      - name: upload tests artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: netpips-test-results.zip
          if-no-files-found: warn
          path: '*.html'

 
  release:
    if: github.ref == 'refs/heads/master'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.5
        with:
          tag_prefix: 'netpips-server-'
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create a GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release Netpips.Server ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
